

/* Create Tables */

CREATE TABLE DAILY_START_END
(
	DAILY_START_END_ID BIGINT NOT NULL AUTO_INCREMENT COMMENT '日次勤務時間記録ID',
	TIMECARD_DAY_ID BIGINT NOT NULL COMMENT 'タイムカード年月日ID',
	START_DATETIME DATETIME COMMENT '開始日時',
	END_DATETIME DATETIME COMMENT '終了日時',
	VACATION_TYPE_CODE VARCHAR(20) COMMENT '休暇タイプコード',
	NOTE TEXT COMMENT '備考入力テキスト',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時',
	UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ',
	VERSION_NO BIGINT NOT NULL COMMENT 'バージョン番号',
	PRIMARY KEY (DAILY_START_END_ID)
) COMMENT = '日次勤務時間記録';


CREATE TABLE MEMBER
(
	MEMBER_ID BIGINT NOT NULL AUTO_INCREMENT COMMENT 'メンバーID',
	MEMBER_NAME VARCHAR(100) NOT NULL COMMENT 'メンバー名称',
	MEMBER_ACCOUNT_ID VARCHAR(50) NOT NULL UNIQUE COMMENT 'メンバーアカウント',
	PASSWORD VARCHAR(256) NOT NULL COMMENT 'パスワード',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時',
	UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ',
	VERSION_NO BIGINT NOT NULL COMMENT 'バージョン番号',
	PRIMARY KEY (MEMBER_ID)
) COMMENT = 'メンバー';


CREATE TABLE MEMBER_ROLE
(
	MEMBER_ROLE_ID BIGINT NOT NULL AUTO_INCREMENT COMMENT 'メンバー権限ID',
	MEMBER_ID BIGINT NOT NULL COMMENT 'メンバーID',
	ROLE_TYPE_CODE VARCHAR(20) NOT NULL COMMENT '権限コード',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時',
	UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ',
	VERSION_NO BIGINT NOT NULL COMMENT 'バージョン番号',
	PRIMARY KEY (MEMBER_ROLE_ID),
	CONSTRAINT UQ_MEMBER_ROLE_MEMBER_ID_ROLE_TYPE_CODE UNIQUE (MEMBER_ID, ROLE_TYPE_CODE)
) COMMENT = 'メンバー権限';


CREATE TABLE ROLE
(
	ROLE_TYPE_CODE VARCHAR(20) NOT NULL COMMENT '権限コード',
	ROLE_NAME VARCHAR(50) NOT NULL COMMENT '権限名称',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時',
	UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ',
	VERSION_NO BIGINT NOT NULL COMMENT 'バージョン番号',
	PRIMARY KEY (ROLE_TYPE_CODE)
) COMMENT = '権限';


CREATE TABLE TIMECARD_DAY
(
	TIMECARD_DAY_ID BIGINT NOT NULL AUTO_INCREMENT COMMENT 'タイムカード年月日ID',
	MEMBER_ID BIGINT NOT NULL COMMENT 'メンバーID',
	BIZ_DATE DATE NOT NULL COMMENT '業務日',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時',
	UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ',
	VERSION_NO BIGINT NOT NULL COMMENT 'バージョン番号',
	PRIMARY KEY (TIMECARD_DAY_ID)
) COMMENT = 'タイムカード年月日';


CREATE TABLE VACATION_TYPE
(
	VACATION_TYPE_CODE VARCHAR(20) NOT NULL COMMENT '休暇タイプコード',
	VACATION_TYPE_NAME VARCHAR(200) NOT NULL COMMENT '休暇タイプ名称',
	REGISTER_DATETIME DATETIME NOT NULL COMMENT '登録日時',
	REGISTER_USER VARCHAR(200) NOT NULL COMMENT '登録ユーザ',
	UPDATE_DATETIME DATETIME NOT NULL COMMENT '更新日時',
	UPDATE_USER VARCHAR(200) NOT NULL COMMENT '更新ユーザ',
	VERSION_NO BIGINT NOT NULL COMMENT 'バージョン番号',
	PRIMARY KEY (VACATION_TYPE_CODE)
) COMMENT = '休暇タイプ';



/* Create Foreign Keys */

ALTER TABLE MEMBER_ROLE
	ADD CONSTRAINT FK_MEMBER_ROLE_MEMBER FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TIMECARD_DAY
	ADD CONSTRAINT FK_TIMECARD_DAY_MEMBER FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER (MEMBER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MEMBER_ROLE
	ADD CONSTRAINT FK_MEMBER_ROLE_ROLE FOREIGN KEY (ROLE_TYPE_CODE)
	REFERENCES ROLE (ROLE_TYPE_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DAILY_START_END
	ADD CONSTRAINT FK_DAILY_START_END_TIMECARD_DAY FOREIGN KEY (TIMECARD_DAY_ID)
	REFERENCES TIMECARD_DAY (TIMECARD_DAY_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DAILY_START_END
	ADD CONSTRAINT FK_DAILY_IN_OUT_VACATION_TYPE FOREIGN KEY (VACATION_TYPE_CODE)
	REFERENCES VACATION_TYPE (VACATION_TYPE_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



